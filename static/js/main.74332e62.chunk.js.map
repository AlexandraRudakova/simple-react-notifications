{"version":3,"sources":["utils.js","GithubIcon.jsx","App.jsx","index.jsx"],"names":["getPrintedCode","options","n","arguments","length","undefined","text","Object","keys","i","k","comma","val","offset","repeat","pval","concat","GithubIcon","react_default","a","createElement","target","href","className","aria-label","style","position","top","fill","right","width","height","viewBox","d","transformOrigin","Header","styled","div","attrs","_templateObject","Pre","pre","_templateObject2","Settings","section","_templateObject3","H3","h3","_templateObject4","message","autoClose","delay","single","containerWidth","animation","in","out","duration","App","Fragment","type","onClick","notifier","success","getNotificationExample","ReactDOM","render","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.74332e62.chunk.js","sourcesContent":["export const getPrintedCode = (options, n = 1) => {\r\n  let text = \"\";\r\n  let { length } = Object.keys(options);\r\n  let i = 0;\r\n  for (let k in options) {\r\n    let comma = i++ < length - 1 ? \",\" : \"\";\r\n    let val = options[k];\r\n    const offset = \"  \".repeat(n);\r\n    let pval = typeof val === \"string\" ? `\"${val}\"` : val;\r\n    pval =\r\n      typeof pval === \"object\"\r\n        ? `{\\n${getPrintedCode(pval, n + 1)}${offset}}`\r\n        : pval;\r\n    text += `${offset}${k}: ${pval}${comma}\\n`;\r\n  }\r\n\r\n  return text;\r\n};\r\n","import React from \"react\";\n\nexport default () => (\n  <a\n    target=\"_blank\"\n    href=\"https://github.com/alexpermyakov/simple-react-notifications\"\n    className=\"github-corner\"\n    aria-label=\"Open GitHub project\"\n    style={{\n      position: \"absolute\",\n      top: \"0px\",\n      fill: \"white\",\n      right: \"0px\"\n    }}\n  >\n    <svg width=\"125\" height=\"125\" viewBox=\"0 0 250 250\">\n      <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill=\"#f36666\" />\n      <path\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n        style={{ transformOrigin: \"130px 106px\" }}\n      />\n      <path d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\" />\n    </svg>\n  </a>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport notifier from \"simple-react-notifications\";\nimport \"simple-react-notifications/dist/index.css\";\nimport { getPrintedCode } from \"./utils\";\nimport GithubIcon from \"./GithubIcon\";\n\nconst Header = styled.div.attrs({ className: \"section\" })`\n  background: #2f2f2f;\n  height: 250px;\n  .title,\n  .subtitle {\n    color: white;\n    text-align: center;\n    margin-bottom: 32px;\n  }\n  .title {\n    margin-top: 48px;\n  }\n`;\n\nconst Pre = styled.pre`\n  background-color: #f6f8fa;\n  border-radius: 3px;\n  font-size: 85%;\n  line-height: 1.45;\n  overflow: auto;\n  padding: 16px;\n`;\n\nconst Settings = styled.section.attrs({ className: \"columns\" })`\n  max-width: 960px;\n  margin: 0 auto;\n  input {\n    height: 16px;\n    width: 16px;\n  }\n  .item {\n    margin-bottom: 8px;\n    span {\n      display: inline-block;\n      width: 100px;\n    }\n  }\n`;\n\nconst H3 = styled.h3`\n  font-size: 18px;\n  margin-bottom: 8px;\n`;\n\nconst message = \"Your items have been updated.\";\n\nconst getConfigureExample = options =>\n  \"notifier.configure({\\n\" + getPrintedCode(options) + \"});\";\n\nconst getNotificationExample = options =>\n  `notifier.success(${message}, {\\n${getPrintedCode(options)}});`;\n\nconst options = {\n  autoClose: 2000,\n  position: \"top-right\",\n  delay: 500,\n  single: false,\n  containerWidth: \"480px\",\n  animation: {\n    in: \"fadeIn\",\n    out: \"fadeOut\",\n    duration: 400\n  }\n};\n\nconst App = () => {\n  return (\n    <>\n      <Header>\n        <h1 className=\"title\">Simple React Notifications</h1>\n        <h2 className=\"subtitle\">\n          Tiny React.js notification library (1kb gzip).\n        </h2>\n        <GithubIcon />\n      </Header>\n      <Settings>\n        <div className=\"column\">\n          <H3>Options</H3>\n          <div>\n            <div className=\"item\">\n              <span>Position</span>\n              <div className=\"select\">\n                <select>\n                  <option>top-left</option>\n                  <option>top-center</option>\n                  <option>top-right</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"item\">\n              <span>Type</span>\n              <div className=\"select\">\n                <select>\n                  <option>success</option>\n                  <option>error</option>\n                  <option>custom</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"item\">\n              <label className=\"checkbox\">\n                <span>autoClose</span>\n                <input type=\"checkbox\" />\n              </label>\n            </div>\n\n            <div className=\"item\">\n              <label className=\"checkbox\">\n                <span>single</span>\n                <input type=\"checkbox\" />\n              </label>\n            </div>\n\n            <br />\n            <button\n              className=\"button is-primary\"\n              onClick={() => notifier.success(message)}\n            >\n              Click to show!\n            </button>\n          </div>\n        </div>\n        <div className=\"column\">\n          <H3>Configuration (optional)</H3>\n          <Pre>{getConfigureExample(options)}</Pre>\n          <br />\n          <H3>Show notification</H3>\n          <Pre>{getNotificationExample({ position: \"top-right\" })}</Pre>\n        </div>\n      </Settings>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bulma/css/bulma.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}