{"version":3,"sources":["utils.js","GithubIcon.jsx","App.jsx","index.jsx"],"names":["getPrintedCode","options","n","arguments","length","undefined","text","Object","keys","i","k","comma","val","offset","repeat","pval","concat","GithubIcon","react_default","a","createElement","target","href","rel","className","aria-label","style","position","top","fill","right","width","height","viewBox","d","transformOrigin","Header","styled","div","attrs","_templateObject","Pre","pre","_templateObject2","Settings","section","_templateObject3","H3","h3","_templateObject4","message","App","_useState","useState","_useState2","slicedToArray","type","setType","_useState3","autoClose","delay","single","containerWidth","animation","in","out","duration","_useState4","setOptions","useEffect","notifier","configure","Fragment","onChange","_ref","objectSpread","value","_ref2","lineHeight","checked","onClick","getConfigureExample","getNotificationExample","ReactDOM","render","src_App","document","querySelector"],"mappings":"mNAAaA,SAAiB,SAAjBA,EAAkBC,GAAmB,IAAVC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EACtCG,EAAO,GACLF,EAAWG,OAAOC,KAAKP,GAAvBG,OACFK,EAAI,EACR,IAAK,IAAIC,KAAKT,EAAS,CACrB,IAAIU,EAAQF,IAAML,EAAS,EAAI,IAAM,GACjCQ,EAAMX,EAAQS,GACZG,EAAS,KAAKC,OAAOZ,GACvBa,EAAsB,kBAARH,EAAP,IAAAI,OAA8BJ,EAA9B,KAAuCA,EAClDG,EACkB,kBAATA,EAAP,MAAAC,OACUhB,EAAee,EAAMb,EAAI,IADnCc,OACwCH,EADxC,KAEIE,EACNT,GAAI,GAAAU,OAAOH,GAAPG,OAAgBN,EAAhB,MAAAM,OAAsBD,GAAtBC,OAA6BL,EAA7B,MAGN,OAAOL,ICdMW,EAAA,kBACbC,EAAAC,EAAAC,cAAA,KACEC,OAAO,SACPC,KAAK,8DACLC,IAAI,sBACJC,UAAU,gBACVC,aAAW,sBACXC,MAAO,CACLC,SAAU,WACVC,IAAK,MACLC,KAAM,QACNC,MAAO,QAGTZ,EAAAC,EAAAC,cAAA,OAAKW,MAAM,MAAMC,OAAO,MAAMC,QAAQ,eACpCf,EAAAC,EAAAC,cAAA,QAAMc,EAAE,mCAAmCL,KAAK,YAChDX,EAAAC,EAAAC,cAAA,QACEc,EAAE,kFACFR,MAAO,CAAES,gBAAiB,iBAE5BjB,EAAAC,EAAAC,cAAA,QAAMc,EAAE,srCCfd,IAAME,EAASC,IAAOC,IAAIC,MAAM,CAAEf,UAAW,WAA9Ba,CAAHG,KAcNC,EAAMJ,IAAOK,IAAVC,KASHC,EAAWP,IAAOQ,QAAQN,MAAM,CAAEf,UAAW,WAAlCa,CAAHS,KAwBRC,EAAKV,IAAOW,GAAVC,KAKFC,EAAU,gCA2JDC,EAnJH,WAAM,IAAAC,EACQC,mBAAS,WADjBC,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAA6C,EAAA,GACTI,EADSF,EAAA,GACHG,EADGH,EAAA,GAAAI,EAEcL,mBAAS,CACrCM,UAAW,IACXhC,SAAU,YACViC,MAAO,EACPC,QAAQ,EACRC,eAAgB,QAChBC,UAAW,CACTC,GAAI,SACJC,IAAK,UACLC,SAAU,OAXEC,EAAA5D,OAAAgD,EAAA,EAAAhD,CAAAmD,EAAA,GAETzD,EAFSkE,EAAA,GAEAC,EAFAD,EAAA,GAehBE,oBAAU,kBAAMC,IAASC,UAAUtE,IAAU,CAACA,IAf9B,IAiBR0B,EAAuC1B,EAAvC0B,SAAUgC,EAA6B1D,EAA7B0D,UAAWE,EAAkB5D,EAAlB4D,OAAQD,EAAU3D,EAAV2D,MAErC,OACE1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqD,SAAA,KACEtD,EAAAC,EAAAC,cAACgB,EAAD,KACElB,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAAd,8BACAN,EAAAC,EAAAC,cAAA,MAAII,UAAU,YAAd,kDAGAN,EAAAC,EAAAC,cAACH,EAAD,OAEFC,EAAAC,EAAAC,cAACwB,EAAD,KACE1B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAC2B,EAAD,gBACA7B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAA,UACEqD,SAAU,SAAAC,GAAgB,IAAbrD,EAAaqD,EAAbrD,OACX+C,EAAW7D,OAAAoE,EAAA,EAAApE,CAAA,GACNN,EADK,CAER0B,SAAUN,EAAOuD,UAGrBA,MAAOjD,GAEPT,EAAAC,EAAAC,cAAA,UAAQwD,MAAM,YAAd,YACA1D,EAAAC,EAAAC,cAAA,UAAQwD,MAAM,cAAd,cACA1D,EAAAC,EAAAC,cAAA,UAAQwD,MAAM,aAAd,gBAKN1D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAA,UACEqD,SAAU,SAAAI,GAAA,IAAGxD,EAAHwD,EAAGxD,OAAH,OAAgBoC,EAAQpC,EAAOuD,QACzCA,MAAOpB,GAEPtC,EAAAC,EAAAC,cAAA,UAAQwD,MAAM,WAAd,WACA1D,EAAAC,EAAAC,cAAA,UAAQwD,MAAM,SAAd,SACA1D,EAAAC,EAAAC,cAAA,UAAQwD,MAAM,UAAd,aAKN1D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,YACfN,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEI,UAAU,QACVgC,KAAK,SACLoB,MAAOjB,EACPc,SAAU,WACRL,EAAW7D,OAAAoE,EAAA,EAAApE,CAAA,GACNN,EADK,CAER0D,UAAWA,IAAwB,UAO7CzC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEI,UAAU,QACVgC,KAAK,SACLiB,SAAU,WACRL,EAAW7D,OAAAoE,EAAA,EAAApE,CAAA,GACNN,EADK,CAER2D,gBAOV1C,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAAA,SAAOI,UAAU,YACfN,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAAEM,OAAQ,OAAQ8C,WAAY,SAA3C,UAGA5D,EAAAC,EAAAC,cAAA,SACEoC,KAAK,WACLuB,QAASlB,EACTe,MAAOhB,EACPa,SAAU,WACRL,EAAW7D,OAAAoE,EAAA,EAAApE,CAAA,GACNN,EADK,CAER4D,QAASA,UAOnB3C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEI,UAAU,oBACVwD,QAAS,WACM,YAATxB,GAA+B,UAATA,GACxBc,IAASd,GAAMN,KAJrB,oBAYJhC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAC2B,EAAD,iCACA7B,EAAAC,EAAAC,cAACqB,EAAD,KA1IkB,SAAAxC,GAAO,MACjC,yBAA2BD,EAAeC,GAAW,MAyIvCgF,CAAoBhF,IAC1BiB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2B,EAAD,0BACA7B,EAAAC,EAAAC,cAACqB,EAAD,KA1IqB,SAAAxC,GAAO,2BAAAe,OACfkC,EADe,UAAAlC,OACChB,EAAeC,GADhB,OA2IzBiF,CAAuB,CACtBvD,WACAgC,mBCxMdwB,IAASC,OAAOlE,EAAAC,EAAAC,cAACiE,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.a13cfc70.chunk.js","sourcesContent":["export const getPrintedCode = (options, n = 1) => {\r\n  let text = \"\";\r\n  let { length } = Object.keys(options);\r\n  let i = 0;\r\n  for (let k in options) {\r\n    let comma = i++ < length - 1 ? \",\" : \"\";\r\n    let val = options[k];\r\n    const offset = \"  \".repeat(n);\r\n    let pval = typeof val === \"string\" ? `\"${val}\"` : val;\r\n    pval =\r\n      typeof pval === \"object\"\r\n        ? `{\\n${getPrintedCode(pval, n + 1)}${offset}}`\r\n        : pval;\r\n    text += `${offset}${k}: ${pval}${comma}\\n`;\r\n  }\r\n\r\n  return text;\r\n};\r\n","import React from \"react\";\n\nexport default () => (\n  <a\n    target=\"_blank\"\n    href=\"https://github.com/alexpermyakov/simple-react-notifications\"\n    rel=\"noopener noreferrer\"\n    className=\"github-corner\"\n    aria-label=\"Open GitHub project\"\n    style={{\n      position: \"absolute\",\n      top: \"0px\",\n      fill: \"white\",\n      right: \"0px\"\n    }}\n  >\n    <svg width=\"125\" height=\"125\" viewBox=\"0 0 250 250\">\n      <path d=\"M0 0l115 115h15l12 27 108 108V0z\" fill=\"#f36666\" />\n      <path\n        d=\"M128 109c-15-9-9-19-9-19 3-7 2-11 2-11-1-7 3-2 3-2 4 5 2 11 2 11-3 10 5 15 9 16\"\n        style={{ transformOrigin: \"130px 106px\" }}\n      />\n      <path d=\"M115 115s4 2 5 0l14-14c3-2 6-3 8-3-8-11-15-24 2-41 5-5 10-7 16-7 1-2 3-7 12-11 0 0 5 3 7 16 4 2 8 5 12 9s7 8 9 12c14 3 17 7 17 7-4 8-9 11-11 11 0 6-2 11-7 16-16 16-30 10-41 2 0 3-1 7-5 11l-12 11c-1 1 1 5 1 5z\" />\n    </svg>\n  </a>\n);\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport notifier from \"simple-react-notifications\";\nimport \"simple-react-notifications/dist/index.css\";\nimport { getPrintedCode } from \"./utils\";\nimport GithubIcon from \"./GithubIcon\";\n\nconst Header = styled.div.attrs({ className: \"section\" })`\n  background: #2f2f2f;\n  height: 250px;\n  .title,\n  .subtitle {\n    color: white;\n    text-align: center;\n    margin-bottom: 32px;\n  }\n  .title {\n    margin-top: 48px;\n  }\n`;\n\nconst Pre = styled.pre`\n  background-color: #f6f8fa;\n  border-radius: 3px;\n  font-size: 85%;\n  line-height: 1.45;\n  overflow: auto;\n  padding: 16px;\n`;\n\nconst Settings = styled.section.attrs({ className: \"columns\" })`\n  max-width: 960px;\n  margin: 0 auto;\n  input[type=\"checkbox\"] {\n    height: 20px;\n    width: 20px;\n  }\n  .item {\n    margin-bottom: 8px;\n    span {\n      line-height: 36px;\n      height: 36px;\n      display: inline-block;\n      width: 100px;\n    }\n  }\n  .input {\n    width: 130px;\n  }\n  .select select {\n    width: 130px;\n  }\n`;\n\nconst H3 = styled.h3`\n  font-size: 18px;\n  margin-bottom: 12px;\n`;\n\nconst message = \"Your items have been updated.\";\n\nconst getConfigureExample = options =>\n  \"notifier.configure({\\n\" + getPrintedCode(options) + \"});\";\n\nconst getNotificationExample = options =>\n  `notifier.success(\"${message}\", {\\n${getPrintedCode(options)}});`;\n\nconst App = () => {\n  const [type, setType] = useState(\"success\");\n  const [options, setOptions] = useState({\n    autoClose: 2000,\n    position: \"top-right\",\n    delay: 0,\n    single: false,\n    containerWidth: \"480px\",\n    animation: {\n      in: \"fadeIn\",\n      out: \"fadeOut\",\n      duration: 400\n    }\n  });\n\n  useEffect(() => notifier.configure(options), [options]);\n\n  const { position, autoClose, single, delay } = options;\n\n  return (\n    <>\n      <Header>\n        <h1 className=\"title\">Simple React Notifications</h1>\n        <h2 className=\"subtitle\">\n          Tiny React.js notification library (1kb gzip).\n        </h2>\n        <GithubIcon />\n      </Header>\n      <Settings>\n        <div className=\"column\">\n          <H3>Options</H3>\n          <div>\n            <div className=\"item\">\n              <span>position</span>\n              <div className=\"select\">\n                <select\n                  onChange={({ target }) => {\n                    setOptions({\n                      ...options,\n                      position: target.value\n                    });\n                  }}\n                  value={position}\n                >\n                  <option value=\"top-left\">top-left</option>\n                  <option value=\"top-center\">top-center</option>\n                  <option value=\"top-right\">top-right</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"item\">\n              <span>type</span>\n              <div className=\"select\">\n                <select\n                  onChange={({ target }) => setType(target.value)}\n                  value={type}\n                >\n                  <option value=\"success\">success</option>\n                  <option value=\"error\">error</option>\n                  <option value=\"custom\">custom</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"item\">\n              <label className=\"checkbox\">\n                <span>autoClose</span>\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  value={autoClose}\n                  onChange={() => {\n                    setOptions({\n                      ...options,\n                      autoClose: autoClose ? autoClose : false\n                    });\n                  }}\n                />\n              </label>\n            </div>\n\n            <div className=\"item\">\n              <label>\n                <span>delay</span>\n                <input\n                  className=\"input\"\n                  type=\"number\"\n                  onChange={() => {\n                    setOptions({\n                      ...options,\n                      delay\n                    });\n                  }}\n                />\n              </label>\n            </div>\n\n            <div className=\"item\">\n              <label className=\"checkbox\">\n                <span style={{ height: \"20px\", lineHeight: \"20px\" }}>\n                  single\n                </span>\n                <input\n                  type=\"checkbox\"\n                  checked={single}\n                  value={delay}\n                  onChange={() => {\n                    setOptions({\n                      ...options,\n                      single: !single\n                    });\n                  }}\n                />\n              </label>\n            </div>\n\n            <br />\n            <button\n              className=\"button is-primary\"\n              onClick={() => {\n                if (type === \"success\" || type === \"error\") {\n                  notifier[type](message);\n                }\n              }}\n            >\n              Click to show!\n            </button>\n          </div>\n        </div>\n        <div className=\"column\">\n          <H3>Configuration (optional)</H3>\n          <Pre>{getConfigureExample(options)}</Pre>\n          <br />\n          <H3>Show notification</H3>\n          <Pre>\n            {getNotificationExample({\n              position,\n              autoClose\n            })}\n          </Pre>\n        </div>\n      </Settings>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/bulma/css/bulma.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}